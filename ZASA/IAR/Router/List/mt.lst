###############################################################################
#
# IAR C/C++ Compiler V6.20.1.931/W32 for MSP430           14/Mar/2015  23:44:44
# Copyright 1996-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.20
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430
#    Source file   =  C:\Users\Madmilla\Desktop\eZ430-RF2480\common\mt\mt.c
#    Command line  =  
#        -f C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\Source\ZASA.cfg
#        (-DZACCEL_BUF_LEN=128 -DHOST_MT_BAUD=9600 -DHOST_MT_RX_OLD=1
#        "-DHOST_MT_RX_FULL=(ZACCEL_BUF_LEN-1)" -DZACCEL_NV_CHANLIST=0x00008000
#        -DZACCEL_NV_PANID=0x0EEE)
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\common\mt\mt.c -D ROUTER -D
#        APP_BLINK_LEDS -lC
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\Router\List\ --remarks
#        --diag_suppress Pe068 -o
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\Router\Obj\ --debug
#        -D__MSP430F2274__ --warnings_are_errors -e --double=32 --clib -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\ -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\Source\ -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\..\common\zaccel\
#        -I C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\..\common\mt\ -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\..\target\include\
#        -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\..\target\cc2480\
#        --reduce_stack_usage -Ohz --require_prototypes
#    List file     =  
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\Router\List\mt.lst
#    Object file   =  
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\Router\Obj\mt.r43
#
###############################################################################

C:\Users\Madmilla\Desktop\eZ430-RF2480\common\mt\mt.c
      1          /**************************************************************************************************
      2              Filename:       mt.c
      3              Revised:        $Date: 2008-04-03 18:32:40 -0700 (Thu, 03 Apr 2008) $
      4              Revision:       $Revision: 16728 $
      5          
      6              Description: This file defines the main functionality of the interface to MT via Z-Accel.
      7          
      8              Copyright 2006-2007 Texas Instruments Incorporated. All rights reserved.
      9          
     10              IMPORTANT: Your use of this Software is limited to those specific rights
     11              granted under the terms of a software license agreement between the user
     12              who downloaded the software, his/her employer (which must be your employer)
     13              and Texas Instruments Incorporated (the "License").  You may not use this
     14              Software unless you agree to abide by the terms of the License. The License
     15              limits your use, and you acknowledge, that the Software may not be modified,
     16              copied or distributed unless embedded on a Texas Instruments microcontroller
     17              or used solely and exclusively in conjunction with a Texas Instruments radio
     18              frequency transceiver, which is integrated into your product.  Other than for
     19              the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     20              works of, modify, distribute, perform, display or sell this Software and/or
     21              its documentation for any purpose.
     22          
     23              YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     24              PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, 
     25              INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE, 
     26              NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     27              TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     28              NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     29              LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     30              INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     31              OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     32              OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     33              (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     34          
     35              Should you have any questions regarding your right to use this Software,
     36              contact Texas Instruments Incorporated at www.TI.com.
     37          **************************************************************************************************/
     38          
     39          /* ------------------------------------------------------------------------------------------------
     40           *                                          Includes
     41           * ------------------------------------------------------------------------------------------------
     42           */
     43          
     44          #include "hal_board.h"
     45          #include "mt.h"
     46          
     47          #ifdef HOST_MT
     48          /* ------------------------------------------------------------------------------------------------
     49           *                                           Macros
     50           * ------------------------------------------------------------------------------------------------
     51           */
     52          
     53          /* ------------------------------------------------------------------------------------------------
     54           *                                           Constants
     55           * ------------------------------------------------------------------------------------------------
     56           */
     57          
     58          /* ------------------------------------------------------------------------------------------------
     59           *                                           Local Variables
     60           * ------------------------------------------------------------------------------------------------
     61           */
     62          
     63          /* ------------------------------------------------------------------------------------------------
     64           *                                           Global Variables
     65           * ------------------------------------------------------------------------------------------------
     66           */
     67          
     68          /* ------------------------------------------------------------------------------------------------
     69           *                                           Local Functions
     70           * ------------------------------------------------------------------------------------------------
     71           */
     72          
     73          /**************************************************************************************************
     74           * @fn          mtInit
     75           *
     76           * @brief       This function initializes the host MT environment.
     77           *
     78           * input parameters
     79           *
     80           * None.
     81           *
     82           * output parameters
     83           *
     84           * None.
     85           *
     86           * @return      None.
     87           **************************************************************************************************
     88           */
     89          void mtInit(void)
     90          {
     91          }
     92          
     93          /**************************************************************************************************
     94           * @fn          mtRx
     95           *
     96           * @brief       This function translates and then transfers a UART MT packet as an RPC packet.
     97           *
     98           * input parameters
     99           *
    100           * None.
    101           *
    102           * output parameters
    103           *
    104           * None.
    105           *
    106           * @return      TRUE if the Rx data was processed; FALSE otherwise.
    107           **************************************************************************************************
    108           */
    109          uint8 mtRx(void)
    110          {
    111            uint8 *pBuf = zaccelMsgBuf;
    112            uint8 len = halUARTRead(HAL_PORT_MT, pBuf, ZACCEL_BUF_LEN-1);
    113            uint8 idx = 0;
    114          
    115            do {
    116              while (len)
    117              {
    118                if (pBuf[idx++] == SOP_VALUE)
    119                {
    120                  break;
    121                }
    122                len--;
    123              }
    124          
    125              if (len > MT_RPC_FRAME_HDR_SZ)
    126              {
    127                uint8 cnt = pBuf[idx] + MT_RPC_FRAME_HDR_SZ;
    128                if ((calcFCS((pBuf+idx), cnt)) == pBuf[idx+cnt])
    129                {
    130                  zaccelRPC(pBuf+idx);
    131                }
    132              }
    133            } while (len);
    134          
    135            return TRUE;
    136          }
    137          
    138          /**************************************************************************************************
    139           * @fn          mtTx
    140           *
    141           * @brief       This function translates and then transfers an RPC packet as a UART MT packet.
    142           *
    143           * input parameters
    144           *
    145           * @param       pBuf - Pointer to the buffer to be used.
    146           *
    147           * output parameters
    148           *
    149           * None.
    150           *
    151           * @return      None.
    152           **************************************************************************************************
    153           */
    154          void mtTx(uint8 *pBuf)
    155          {
    156            uint8 tmp = SOP_VALUE;
    157          
    158            halUARTWrite(HAL_PORT_MT, &tmp, 1);
    159            tmp = *pBuf + MT_RPC_FRAME_HDR_SZ;
    160            halUARTWrite(HAL_PORT_MT, pBuf, tmp);
    161            tmp = calcFCS(pBuf, tmp);
    162            halUARTWrite(HAL_PORT_MT, &tmp, 1);
    163          }
    164          
    165          /**************************************************************************************************
    166           * @fn          calcFCS
    167           *
    168           * @brief       This function calculates the FCS checksum for the MT protocol serial message to the
    169           *              Z-Tool PC GUI.
    170           *
    171           * input parameters
    172           *
    173           * @param       pBuf - Pointer to the end of a buffer to calculate the FCS.
    174           * @param       len - Length of the pBuf.
    175           *
    176           * output parameters
    177           *
    178           * None.
    179           *
    180           * @return      The calculated FCS.
    181           **************************************************************************************************
    182           */
    183          uint8 calcFCS(uint8 *pBuf, uint8 len)
    184          {
    185            uint8 rtrn = 0;
    186          
    187            while (len--)
    188            {
    189              rtrn ^= *pBuf++;
    190            }
    191          
    192            return rtrn;
    193          }
    194          #endif


 

 


Errors: none
Warnings: none
