###############################################################################
#
# IAR C/C++ Compiler V6.20.1.931/W32 for MSP430           14/Mar/2015  23:44:44
# Copyright 1996-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.20
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430
#    Source file   =  
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\Source\ZASA_main.c
#    Command line  =  
#        -f C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\Source\ZASA.cfg
#        (-DZACCEL_BUF_LEN=128 -DHOST_MT_BAUD=9600 -DHOST_MT_RX_OLD=1
#        "-DHOST_MT_RX_FULL=(ZACCEL_BUF_LEN-1)" -DZACCEL_NV_CHANLIST=0x00008000
#        -DZACCEL_NV_PANID=0x0EEE)
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\Source\ZASA_main.c -D
#        ROUTER -D APP_BLINK_LEDS -lC
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\Router\List\ --remarks
#        --diag_suppress Pe068 -o
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\Router\Obj\ --debug
#        -D__MSP430F2274__ --warnings_are_errors -e --double=32 --clib -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\ -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\Source\ -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\..\common\zaccel\
#        -I C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\..\common\mt\ -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\..\target\include\
#        -I
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\..\..\target\cc2480\
#        --reduce_stack_usage -Ohz --require_prototypes
#    List file     =  
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\Router\List\ZASA_main.lst
#    Object file   =  
#        C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\IAR\Router\Obj\ZASA_main.r43
#
###############################################################################

C:\Users\Madmilla\Desktop\eZ430-RF2480\ZASA\Source\ZASA_main.c
      1          /**************************************************************************************************
      2              Filename:       ZASA_main.c
      3              Revised:        $Date: 2008-04-10 19:05:38 -0700 (Thu, 10 Apr 2008) $
      4              Revision:       $Revision: 16805 $
      5          
      6              Description: This file contains the main C-code entry point of the Z-Accel Sample Application.
      7          
      8              Copyright 2006-2007 Texas Instruments Incorporated. All rights reserved.
      9          
     10              IMPORTANT: Your use of this Software is limited to those specific rights
     11              granted under the terms of a software license agreement between the user
     12              who downloaded the software, his/her employer (which must be your employer)
     13              and Texas Instruments Incorporated (the "License").  You may not use this
     14              Software unless you agree to abide by the terms of the License. The License
     15              limits your use, and you acknowledge, that the Software may not be modified,
     16              copied or distributed unless embedded on a Texas Instruments microcontroller
     17              or used solely and exclusively in conjunction with a Texas Instruments radio
     18              frequency transceiver, which is integrated into your product.  Other than for
     19              the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     20              works of, modify, distribute, perform, display or sell this Software and/or
     21              its documentation for any purpose.
     22          
     23              YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     24              PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, 
     25              INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE, 
     26              NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     27              TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     28              NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     29              LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     30              INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     31              OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     32              OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     33              (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     34          
     35              Should you have any questions regarding your right to use this Software,
     36              contact Texas Instruments Incorporated at www.TI.com.
     37          **************************************************************************************************/
     38          
     39          /* ------------------------------------------------------------------------------------------------
     40           *                                          Includes
     41           * ------------------------------------------------------------------------------------------------
     42           */
     43          
     44          #include "zaccel.h"
     45          #include "hal_board.h"
     46          #include "mt.h"
     47          #include "ZASA.h"
     48          
     49          /* ------------------------------------------------------------------------------------------------
     50           *                                           Constants
     51           * ------------------------------------------------------------------------------------------------
     52           */
     53          
     54          /* ------------------------------------------------------------------------------------------------
     55           *                                           Typedefs
     56           * ------------------------------------------------------------------------------------------------
     57           */
     58          
     59          /* ------------------------------------------------------------------------------------------------
     60           *                                           Macros
     61           * ------------------------------------------------------------------------------------------------
     62           */
     63          
     64          /* ------------------------------------------------------------------------------------------------
     65           *                                           Local Variables
     66           * ------------------------------------------------------------------------------------------------
     67           */
     68          
     69          /* ------------------------------------------------------------------------------------------------
     70           *                                           Local Functions
     71           * ------------------------------------------------------------------------------------------------
     72           */
     73          
     74          
     75          /**************************************************************************************************
     76           * @fn          main
     77           *
     78           * @brief       This is the C-code entry function after powerup and compiler generated inits.
     79           *
     80           * input parameters
     81           *
     82           * None.
     83           *
     84           * output parameters
     85           *
     86           * None.
     87           *
     88           * @return      None.
     89           **************************************************************************************************
     90           */

   \                                 In  segment CODE, align 2
     91          void main(void)
   \                     main:
     92          {
     93            halBoardInit();
   \   000000   B012....     CALL    #halBoardInit
     94          
     95            // Initialize the Z-Accel and the Host/RPC executive functionality.
     96            zaccelInit();
   \   000004   B012....     CALL    #zaccelInit
     97          
     98          #ifdef HOST_MT
     99            mtInit();
    100          #endif
    101          
    102            appInit();
   \   000008   B012....     CALL    #appInit
    103          
    104            for (;;)
    105            {
    106              /* Prioritize HAL events to maintain quasi-realtime performance on H/W related events.
    107               * After all HAL events are processed, service the ZACC events.
    108               */
    109              if (!appExecHal())
   \                     ??main_0:
   \   00000C   B012....     CALL    #appExecHal
   \   000010   0C93         CMP.W   #0x0, R12
   \   000012   FC23         JNE     ??main_0
    110              {
    111                // If all HAL and Host events have been processed, it is ok to go to low power
    112                // for RFD/End devices.
    113                if (!appExecHost() && (appFlags & appLowPwrF))
   \   000014   B012....     CALL    #appExecHost
   \   000018   0C93         CMP.W   #0x0, R12
   \   00001A   F823         JNE     ??main_0
   \   00001C   C293....     CMP.B   #0x0, &appFlags
   \   000020   F537         JGE     ??main_0
    114                {
    115                  HAL_LOW_POWER_MODE();
   \   000022   32D0D800     BIS.W   #0xd8, SR
   \   000026   F23F         JMP     ??main_0
    116                }
    117              }
    118            }
    119          }

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      2   main
        2   -> appExecHal
        2   -> appExecHost
        2   -> appInit
        2   -> halBoardInit
        2   -> zaccelInit


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      40  main

 
 40 bytes in segment CODE
 
 40 bytes of CODE memory

Errors: none
Warnings: none
